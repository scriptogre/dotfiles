# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Oh-My-Zsh setup
export ZSH="$HOME/.oh-my-zsh"
ZSH_THEME="powerlevel10k/powerlevel10k"
plugins=(git)
source $ZSH/oh-my-zsh.sh

# Load p10k configuration if it exists
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# Powerlevel10k settings
POWERLEVEL9K_PROMPT_ON_NEWLINE=true

alias rsynca='rsync -avzP'

# -----------------------------------------------------------------------------
# finda: search for filenames or directory names locally or on a remote host,
# and allow Ctrl+C to interrupt both local and remote searches.
# Usage: finda [<host>:]<path> <pattern>
# Example (local):  finda . foobar
# Example (remote): finda expert_systems:/home/usergpu foobar
# -----------------------------------------------------------------------------
# -----------------------------------------------------------------------------
# finda: search for filenames or directory names locally or on a remote host,
# allowing Ctrl+C to interrupt without killing your shell.
# Usage: finda [<host>:]<path> <pattern>
# Example (local):  finda . foobar
# Example (remote): finda expert_systems:/home/usergpu foobar
# -----------------------------------------------------------------------------
finda() {
  if [[ $# -lt 2 ]]; then
    echo "Usage: finda [<host>:]<path> <pattern>"
    return 1
  fi

  local TARGET="$1"
  local PATTERN="$2"

  # Note: using only -iname "*$PATTERN*" will match both files and directories.
  if [[ "$TARGET" == *:* ]]; then
    local HOST="${TARGET%%:*}"
    local REMOTE_PATH="${TARGET#*:}"
    ssh "$HOST" "find '$REMOTE_PATH' -iname '*$PATTERN*' 2>/dev/null"
  else
    find "$TARGET" -iname "*$PATTERN*" 2>/dev/null
  fi
}

alias port='f() { lsof -nP -iTCP:"$1" -sTCP:LISTEN 2>/dev/null; }; f'
alias killport='f() { pid=$(lsof -nP -iTCP:"$1" -sTCP:LISTEN -t 2>/dev/null); if [ "$pid" ]; then kill -9 "$pid" && echo "Killed PID $pid on port $1"; else echo "Nothing on port $1"; fi; }; f'
